Info in <Minuit2>: VariableMetricBuilder: Stop the minimization - reached machine accuracy limit
Info in <Minuit2>: Edm is smaller than machine accuracy : machineLimit = 0.0127926
Info in <Minuit2>: Current  Edm is : edm = 0.00109513
Info in <Minuit2>: Required Edm is : edmval = 0.001
Info in <Minuit2>: Minuit2Minimizer::Hesse : Hesse is valid - matrix is accurate
Info in <Minuit2>: Minuit2Minimizer::Hesse : Hesse is valid - matrix is accurate
Warning in <TCanvas::Constructor>: Deleting canvas with same name: can
Info in <TCanvas::Print>: pdf file plots/CategoryFits/ModGaus100-180_80/dijet3.pdf has been created
ds [100,180]
[#1] INFO:Fitting -- RooAbsOptTestStatistic::ctor(nll_background_dijet3) fixing interpretation of coefficients of any RooAddPdf to full domain of observables 
[#1] INFO:NumericIntegration -- RooRealIntegral::init(background_Int[llphoton_m]) using numeric integrator RooIntegrator1D to calculate Int(llphoton_m)
[#1] INFO:Minization -- RooMinimizer::optimizeConst: activating const optimization
Minuit2Minimizer: Minimize with max-calls 3000 convergence for edm < 1 strategy 1
MnSeedGenerator: for initial parameters FCN = 222505.4312504
MnSeedGenerator: Initial state:   - FCN =   222505.4312504 Edm =      18145.5 NCalls =     25
VariableMetric: start iterating until Edm is < 0.001
VariableMetric: Initial state   - FCN =   222505.4312504 Edm =      18145.5 NCalls =     25
VariableMetric: Iteration #   0 - FCN =   222505.4312504 Edm =      18145.5 NCalls =     25
VariableMetric: Iteration #   1 - FCN =   215171.3636673 Edm =      646.577 NCalls =     52
VariableMetric: Iteration #   2 - FCN =    214943.087021 Edm =       67.954 NCalls =     68
VariableMetric: Iteration #   3 - FCN =   214848.9920849 Edm =      64.4103 NCalls =     83
VariableMetric: Iteration #   4 - FCN =   214686.3154625 Edm =      5.55962 NCalls =     99
VariableMetric: Iteration #   5 - FCN =    214664.293194 Edm =      3.64691 NCalls =    122
VariableMetric: Iteration #   6 - FCN =   214659.6911126 Edm =      3.28521 NCalls =    140
VariableMetric: Iteration #   7 - FCN =   214654.7984587 Edm =      1.11618 NCalls =    154
VariableMetric: Iteration #   8 - FCN =   214648.8670892 Edm =      2.85759 NCalls =    169
VariableMetric: Iteration #   9 - FCN =   214637.4791153 Edm =     0.662684 NCalls =    189
VariableMetric: Iteration #  10 - FCN =   214636.9905424 Edm =     0.146555 NCalls =    207
VariableMetric: Iteration #  11 - FCN =   214634.0673623 Edm =      1.19602 NCalls =    223
VariableMetric: Iteration #  12 - FCN =   214626.9395973 Edm =      1.54555 NCalls =    238
VariableMetric: Iteration #  13 - FCN =   214624.8142377 Edm =     0.144138 NCalls =    252
VariableMetric: Iteration #  14 - FCN =   214624.6917776 Edm =    0.0142903 NCalls =    266
VariableMetric: Iteration #  15 - FCN =   214624.6794824 Edm =  0.000482709 NCalls =    279
VariableMetric: After Hessian   - FCN =   214624.6794824 Edm =   0.00109513 NCalls =    327
VariableMetric: Iteration #  16 - FCN =   214624.6794824 Edm =   0.00109513 NCalls =    327
Minuit2Minimizer : Valid minimum - status = 0
FVAL  = 214624.679482446809
Edm   = 0.00109513059152892668
Nfcn  = 327
#Delta#nu	  = 0.0802715	 +/-  0.218857	(limited)
#nu_{L}	  = 2.02126	 +/-  0.193843	(limited)
#sigma_{0}	  = 17.5532	 +/-  2.04946	(limited)
#sigma_{H}	  = 52.1744	 +/-  1.93487	(limited)
#sigma_{L}	  = 10.3173	 +/-  0.406639	(limited)
m_{0}	  = 114.258	 +/-  0.24421	(limited)
[#1] INFO:Fitting -- RooAbsPdf::fitTo(background) Calculating sum-of-weights-squared correction matrix for covariance matrix
[#1] INFO:Minization -- RooMinimizer::optimizeConst: deactivating const optimization
[#1] INFO:InputArguments -- RooAbsData::plotOn(dijet3) INFO: dataset has non-integer weights, auto-selecting SumW2 errors instead of Poisson errors
[#1] INFO:Plotting -- RooAbsPdf::plotOn(background) p.d.f was fitted in range and no explicit plot,norm range was specified, using fit range as default
[#1] INFO:Plotting -- RooAbsPdf::plotOn(background) only plotting range 'fit_nll_background_dijet3'
[#1] INFO:Plotting -- RooAbsPdf::plotOn(background) p.d.f. curve is normalized using explicit choice of ranges 'fit_nll_background_dijet3'
[#1] INFO:NumericIntegration -- RooRealIntegral::init(background_Int[llphoton_m]) using numeric integrator RooIntegrator1D to calculate Int(llphoton_m)
[#1] INFO:NumericIntegration -- RooRealIntegral::init(background_Int[llphoton_m|fit_nll_background_dijet3]_Norm[llphoton_m]) using numeric integrator RooIntegrator1D to calculate Int(llphoton_m)
